{"version":3,"file":"static/js/882.5cb35197.chunk.js","mappings":"sQAIe,SAASA,EAAYC,GAMhC,IALFC,EAAGD,EAAHC,IACAC,EAASF,EAATE,UACAC,EAAYH,EAAZG,aACAC,EAAUJ,EAAVI,WACAC,EAAWL,EAAXK,YAEAC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAC1BI,GAAkBC,EAAAA,EAAAA,QAAO,MACzBC,GAAUD,EAAAA,EAAAA,QAAO,MAEjBE,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACZb,EAAQ,CAADW,EAAAE,KAAA,QACK,OAAfC,IAAeH,EAAAI,OAAA,iBAIqC,OAAhDR,EAAUP,EAAQgB,QAAQC,WAAWC,YAAWP,EAAAE,KAAA,EACjCM,MAAMZ,GAAS,KAAD,EAAvB,OAANC,EAAMG,EAAAS,KAAAT,EAAAE,KAAA,EACOL,EAAOC,OAAO,KAAD,EAA1BA,EAAIE,EAAAS,KACV9B,EAAW+B,IAAIC,gBAAgBb,IAC/BlB,EAAYkB,GACZpB,GAAa,GACbQ,EAAc,IAAI,yBAAAc,EAAAY,OAAA,GAAAjB,EAAA,KACnB,kBAbe,OAAAJ,EAAAsB,MAAA,KAAAC,UAAA,KAeVX,EAAe,WACnBzB,GAAa,GACbQ,EAAc,GAChB,EAEA,OACE6B,EAAAA,EAAAA,KAACC,EAAAA,EAAWC,KAAI,CAACC,KAAMzC,EAAW0C,GAAIC,EAAAA,SAASC,UAC7CC,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACLJ,GAAG,MACHK,UAAU,gBACVC,aAActC,EACduC,QAAShD,EAAa2C,SAAA,EAEtBN,EAAAA,EAAAA,KAACC,EAAAA,EAAWW,MAAK,CACfR,GAAIC,EAAAA,SACJQ,MAAM,wBACNC,UAAU,YACVC,QAAQ,cACRC,MAAM,uBACNC,UAAU,cACVC,QAAQ,YAAWZ,UAEnBN,EAAAA,EAAAA,KAAA,OAAKS,UAAU,kEAGjBT,EAAAA,EAAAA,KAAA,OAAKS,UAAU,qCAAoCH,UACjDN,EAAAA,EAAAA,KAAA,OAAKS,UAAU,kFAAiFH,UAC9FN,EAAAA,EAAAA,KAACC,EAAAA,EAAWW,MAAK,CACfR,GAAIC,EAAAA,SACJQ,MAAM,wBACNC,UAAU,uDACVC,QAAQ,yCACRC,MAAM,uBACNC,UAAU,yCACVC,QAAQ,uDAAsDZ,UAE9DC,EAAAA,EAAAA,MAACC,EAAAA,EAAOW,MAAK,CAACV,UAAU,gJAA+IH,SAAA,EACrKN,EAAAA,EAAAA,KAAA,OAAAM,UACEC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2BAA0BH,SAAA,EACvCN,EAAAA,EAAAA,KAACoB,IAAY,CACXC,IAAK/C,EACLgD,MAAO7D,EACP8D,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,OAAQ,GACRC,aAAc,IACdC,MAAO,CAAC,EAAG,EAAG,EAAG,KACjBC,MAAO3D,EAAa,GACpB4D,OAAQ,KAGVvB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,SACE+B,QAAQ,OACRtB,UAAU,2DAA0DH,SACrE,UAGDN,EAAAA,EAAAA,KAAA,SACEgC,IAAK,GACLC,IAAK,GACLC,MAAOhE,EACPiE,SAAU,SAACC,GAAC,OAAKjE,EAAciE,EAAEC,OAAOH,MAAM,EAC9CI,KAAK,QACL7B,UAAU,sHACV8B,GAAG,UAELhC,EAAAA,EAAAA,MAAA,QAAME,UAAU,aAAYH,SAAA,CAAC,IAAEpC,cAIrCqC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sEAAqEH,SAAA,EAClFN,EAAAA,EAAAA,KAAA,UACEsC,KAAK,SACL7B,UAAU,0PACV+B,QAAS,kBAAMjE,GAAY,EAAC+B,SAC7B,UAGDN,EAAAA,EAAAA,KAAA,UACEsC,KAAK,SACL7B,UAAU,6LACV+B,QAASpD,EAAakB,SACvB,2BAWnB,CCtHe,SAASmC,EAAOjF,GAAuC,IAApCkF,EAAOlF,EAAPkF,QAAS9E,EAAUJ,EAAVI,WAAYC,EAAWL,EAAXK,YAErDC,GAAsBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BL,EAAGO,EAAA,GAAE2E,EAAM3E,EAAA,GAClB4E,GAAkC7E,EAAAA,EAAAA,WAAS,GAAM8E,GAAA5E,EAAAA,EAAAA,GAAA2E,EAAA,GAA1ClF,EAASmF,EAAA,GAAElF,EAAYkF,EAAA,GAExBC,GAAWzE,EAAAA,EAAAA,UAgBjB,OACEkC,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAAzC,SAAA,EACEN,EAAAA,EAAAA,KAACzC,EAAY,CACXG,UAAWA,EACXC,aAAcA,EACdF,IAAKA,EACLG,WAAYA,EACZC,YAAaA,KAEf0C,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBH,SAAA,EACtCN,EAAAA,EAAAA,KAAA,OAAKS,UAAU,wBAAuBH,UACpCN,EAAAA,EAAAA,KAAA,OACEvC,IACEiF,GACA,oEAEFM,IAAI,GACJvC,UAAU,sCAGdT,EAAAA,EAAAA,KAAA,UACEsC,KAAK,SACLE,QA1BiB,SAACJ,GACxBU,EAASxD,QAAQ2D,OACnB,EAyBQxC,UAAU,6CAA4CH,SACvD,kBAIDN,EAAAA,EAAAA,KAAA,SACEsC,KAAK,OACLY,OAAO,UACP7B,IAAKyB,EACLX,SA5CgB,SAACC,GACvB,IAAMe,EAAOf,EAAEC,OAAOe,MAAM,GACvBD,IAELR,EAAOhD,IAAIC,gBAAgBuD,IAC3BxF,GAAa,GACf,EAuCQ8C,UAAU,gBAKpB,C,0CCzDO,SAAe4C,EAAiBC,EAAAC,GAAA,OAAAC,EAAA1D,MAAC,KAADC,UAAA,CAatC,SAAAyD,IAAA,OAAAA,GAAA/E,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAbM,SAAAC,EAAiC6E,EAASC,GAAQ,IAAAC,EAAAC,EAAAC,EAAA,OAAAnF,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC1B,OAAvBwE,EAAOG,EAAAA,GAAKC,YAAW9E,EAAAE,KAAA,GAEvB6E,EAAAA,EAAAA,IAAcL,EAAMF,GAAS,KAAD,EAC5BG,GAAUK,EAAAA,EAAAA,IAAIC,EAAAA,GAAUP,EAAKQ,MAE7BN,GAAMO,EAAAA,EAAAA,IAAOR,EAASH,EAAS,CAAEY,OAAO,MAE5CX,EAAS,CACPpB,KAAM,iBACNmB,QAAAA,IAEJI,GAAOS,MAAM,mBAAmB,wBAAArF,EAAAY,OAAA,GAAAjB,EAAA,MACjCkB,MAAA,KAAAC,UAAA,CAEM,SAAewE,EAAMC,EAAAC,GAAA,OAAAC,EAAA5E,MAAC,KAADC,UAAA,CAQ3B,SAAA2E,IAAA,OAAAA,GAAAjG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MARM,SAAAgG,EAAsBxB,EAAMY,GAAW,IAAAa,EAAAC,EAAA,OAAAnG,EAAAA,EAAAA,KAAAM,MAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,OAGlB,OAFpByF,GAAUvD,EAAAA,EAAAA,IAAI0D,EAAAA,GAAS,UAAYhB,EAAYI,IAAM,SAE5Da,EAAAA,EAAAA,IAAYJ,EAASzB,GAAM2B,EAAA3F,KAAA,GACP8F,EAAAA,EAAAA,IAAeL,GAAS,KAAD,EAAjC,OAAHC,EAAGC,EAAApF,KAAAoF,EAAAzF,OAAA,SAEAwF,GAAG,wBAAAC,EAAAjF,OAAA,GAAA8E,EAAA,MAEb7E,MAAA,KAAAC,UAAA,C,cCzBc,SAASmF,IACtB,IAAAC,GAAkCC,EAAAA,EAAAA,YAAWC,EAAAA,GAArCtB,EAAWoB,EAAXpB,YAAaL,EAAQyB,EAARzB,SACrB5F,GAA8BC,EAAAA,EAAAA,UAASgG,EAAYuB,UAAStH,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArD4E,EAAO1E,EAAA,GAAEJ,EAAUI,EAAA,GAC1B4E,GAAgC7E,EAAAA,EAAAA,UAAS,MAAK8E,GAAA5E,EAAAA,EAAAA,GAAA2E,EAAA,GAAvC0C,EAAQzC,EAAA,GAAEhF,EAAWgF,EAAA,GAC5B0C,GAAgCxH,EAAAA,EAAAA,UAASgG,EAAYyB,aAAYC,GAAAxH,EAAAA,EAAAA,GAAAsH,EAAA,GAA1DG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAGtBG,EAAY,eAAApI,GAAAiB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOwD,GAAC,IAAAyC,EAAA,OAAAnG,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEI,GAD/BiD,EAAEyD,iBACEhB,EAAMd,EAAYuB,UACnBA,EAAS,CAADrG,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACEoF,EAAOe,EAAUvB,GAAY,OAAzCc,EAAG5F,EAAAS,KAAA,OAGJ2D,EAAkB,CAAEmC,YAAaE,EAAUJ,SAAST,GAAMnB,GAAU,wBAAAzE,EAAAY,OAAA,GAAAjB,EAAA,KACrE,gBARiB0E,GAAA,OAAA9F,EAAAsC,MAAA,KAAAC,UAAA,KAUlB,OACEQ,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAAzC,SAAA,EACEC,EAAAA,EAAAA,MAAA,QAAME,UAAU,sBAAsBqF,SAAUF,EAAatF,SAAA,EAC3DC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWH,SAAA,EACxBN,EAAAA,EAAAA,KAAA,MAAIS,UAAU,+CAA8CH,SAAC,iBAG7DN,EAAAA,EAAAA,KAAA,KAAGS,UAAU,uCAAsCH,SAAC,+EAKpDN,EAAAA,EAAAA,KAACyC,EAAO,CACNC,QAASA,EACT9E,WAAYA,EACZC,YAAaA,KAGf0C,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gBAAeH,SAAA,EAC5BN,EAAAA,EAAAA,KAAA,SACE+B,QAAQ,WACRtB,UAAU,iDAAgDH,SAC3D,cAGDN,EAAAA,EAAAA,KAAA,OAAKS,UAAU,OAAMH,UACnBC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mIAAkIH,SAAA,EAC/IN,EAAAA,EAAAA,KAAA,QAAMS,UAAU,iDAAgDH,SAAC,OAGjEN,EAAAA,EAAAA,KAAA,SACEmC,SAAU,SAACC,GAAC,OAAKuD,EAAYvD,EAAEC,OAAOH,MAAM,EAC5CA,MAAOwD,EACPpD,KAAK,OACLyD,KAAK,WACLxD,GAAG,WACHyD,aAAa,WACbvF,UAAU,2GAOpBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,6CAA4CH,SAAA,EACzDN,EAAAA,EAAAA,KAAA,UACEsC,KAAK,SACL7B,UAAU,6CAA4CH,SACvD,YAGDN,EAAAA,EAAAA,KAAA,UACEsC,KAAK,SACL7B,UAAU,yMAAwMH,SACnN,gBAMLN,EAAAA,EAAAA,KAAA,OAAKS,UAAU,UAASH,UACtBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,aAAsB,OAAXyD,QAAW,IAAXA,OAAW,EAAXA,EAAayB,mBAUnC,C","sources":["components/CropperModal.jsx","components/Cropper.jsx","utils/handleProfile.js","pages/EditProfile.jsx"],"sourcesContent":["import { Fragment, useRef, useState } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport AvatarEditor from \"react-avatar-editor\";\n\nexport default function CropperModal({\n  src,\n  modalOpen,\n  setModalOpen,\n  setPreview,\n  setPhotoURL\n}) {\n  const [slideValue, setSlideValue] = useState(10);\n  const cancelButtonRef = useRef(null);\n  const cropRef = useRef(null);\n\n  const handleSave = async () => {\n    if (!cropRef) {\n      handleCancel();\n      return;\n    }\n\n    const dataUrl = cropRef.current.getImage().toDataURL();\n    const result = await fetch(dataUrl);\n    const blob = await result.blob();\n    setPreview(URL.createObjectURL(blob));\n    setPhotoURL(blob);\n    setModalOpen(false);\n    setSlideValue(10);\n  };\n\n  const handleCancel = () => {\n    setModalOpen(false);\n    setSlideValue(10);\n  };\n\n  return (\n    <Transition.Root show={modalOpen} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"relative z-10\"\n        initialFocus={cancelButtonRef}\n        onClose={setModalOpen}\n      >\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-zinc-500 bg-opacity-75 transition-opacity\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n          <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n              enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n              leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            >\n              <Dialog.Panel className=\"relative transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6\">\n                <div>\n                  <div className=\"mt-3 text-center sm:mt-5\">\n                    <AvatarEditor\n                      ref={cropRef}\n                      image={src}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                      border={50}\n                      borderRadius={150}\n                      color={[0, 0, 0, 0.72]}\n                      scale={slideValue / 10}\n                      rotate={0}\n                    />\n\n                    <div>\n                      <label\n                        htmlFor=\"zoom\"\n                        className=\"mb-2 inline-block text-neutral-700 dark:text-neutral-200\"\n                      >\n                        zoom\n                      </label>\n                      <input\n                        min={10}\n                        max={50}\n                        value={slideValue}\n                        onChange={(e) => setSlideValue(e.target.value)}\n                        type=\"range\"\n                        className=\"transparent accent-sky-500 h-1.5 w-full cursor-pointer appearance-none rounded-lg border-transparent bg-neutral-200\"\n                        id=\"zoom\"\n                      />\n                      <span className=\"bg-red-500\"> {slideValue}</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-5 sm:mt-6 sm:grid sm:grid-flow-row-dense sm:grid-cols-2 sm:gap-3\">\n                  <button\n                    type=\"button\"\n                    className=\"inline-flex w-full justify-center rounded-md bg-sky-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-sky-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-sky-600 sm:col-start-2\"\n                    onClick={() => handleSave()}\n                  >\n                    Save\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-zinc-900 shadow-sm ring-1 ring-inset ring-zinc-300 hover:bg-zinc-50 sm:col-start-1 sm:mt-0\"\n                    onClick={handleCancel}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n}\n","import { useState, useRef} from \"react\";\nimport CropperModal from \"./CropperModal\";\n\n\n\nexport default function Cropper({ preview, setPreview, setPhotoURL}) {\n  \n  const [src, setSrc] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const inputRef = useRef();\n \n\n\n  const handleImgChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n  \n    setSrc(URL.createObjectURL(file));\n    setModalOpen(true);\n  };\n\n  const handleInputClick = (e) => {\n    inputRef.current.click();\n  };\n\n  return (\n    <>\n      <CropperModal\n        modalOpen={modalOpen}\n        setModalOpen={setModalOpen}\n        src={src}\n        setPreview={setPreview}\n        setPhotoURL={setPhotoURL}\n      />\n      <div className=\"flex gap-3 items-center\">\n        <div className=\"border  rounded-full \">\n          <img\n            src={\n              preview ||\n              \" https://www.signivis.com/img/custom/avatars/member-avatar-01.png\"\n            }\n            alt=\"\"\n            className=\"w-32 rounded-full object-cover\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          onClick={handleInputClick}\n          className=\"rounded-lg bg-sky-500 text-white px-4 py-2\"\n        >\n          Select Image\n        </button>\n\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          ref={inputRef}\n          onChange={handleImgChange}\n          className=\"hidden\"\n        />\n      </div>\n    </>\n  );\n}\n","import { auth } from \"../firebase\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport { usersRef } from \"../firebase\";\nimport { updateProfile } from \"firebase/auth\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../firebase\";\n\nexport async function updateProfileData(payload, dispatch) {\n  const user = auth.currentUser;\n\n  await updateProfile(user, payload);\n  const userDoc = doc(usersRef, user.uid);\n\n  const res = setDoc(userDoc, payload, { merge: true });\n  res &&\n    dispatch({\n      type: \"UPDATE_PROFILE\",\n      payload,\n    });\n  res && alert(\"Profile updated\");\n}\n\nexport async function upload(file, currentUser) {\n  const fileRef = ref(storage, \"avatar/\" + currentUser.uid + \".jpg\");\n\n uploadBytes(fileRef, file);\n  const url =  await getDownloadURL(fileRef);\n\n    return url;\n\n}\n","import { useState, useContext } from \"react\";\nimport Cropper from \"../components/Cropper\";\nimport { updateProfileData, upload} from \"../utils/handleProfile\";\nimport { AuthContext } from \"../store/AuthContext\";\n\nexport default function EditProfile() {\n  const { currentUser, dispatch } = useContext(AuthContext);\n  const [preview, setPreview] = useState(currentUser.photoURL);\n  const [photoURL, setPhotoURL] = useState(null);\n  const [username, setUsername] = useState(currentUser.displayName);\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let url = currentUser.photoURL;\n   if (photoURL) {\n     url = await upload(photoURL, currentUser)\n   }\n   \n    updateProfileData({ displayName: username, photoURL:url}, dispatch);\n  };\n\n  return (\n    <>\n      <form className=\"w-1/2 mx-auto mt-12\" onSubmit={handleSubmit}>\n        <div className=\"space-y-3\">\n          <h2 className=\"text-base font-semibold leading-7 text-white\">\n            EditProfile\n          </h2>\n          <p className=\"mt-1 text-sm leading-6 text-zinc-400\">\n            This information will be displayed publicly so be careful what you\n            share.\n          </p>\n\n          <Cropper\n            preview={preview}\n            setPreview={setPreview}\n            setPhotoURL={setPhotoURL}\n          />\n\n          <div className=\"sm:col-span-4\">\n            <label\n              htmlFor=\"username\"\n              className=\"block text-sm font-medium leading-6 text-white\"\n            >\n              Username\n            </label>\n            <div className=\"mt-2\">\n              <div className=\"flex rounded-md bg-white/5 ring-1 ring-inset ring-white/10 focus-within:ring-2 focus-within:ring-inset focus-within:ring-sky-500\">\n                <span className=\"flex select-none items-center pl-3  sm:text-sm\">\n                  @\n                </span>\n                <input\n                  onChange={(e) => setUsername(e.target.value)}\n                  value={username}\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  autoComplete=\"username\"\n                  className=\"flex-1 border-0 bg-transparent py-1.5 pl-1 text-white focus:ring-0 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-6 flex items-center justify-end gap-x-6\">\n          <button\n            type=\"button\"\n            className=\"text-sm font-semibold leading-6 text-white\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            className=\"rounded-md bg-sky-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-sky-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-sky-500\"\n          >\n            Save\n          </button>\n        </div>\n      </form>\n\n      <div className=\"profile\">\n        <p>Username: {currentUser?.displayName}</p>\n        {/* <h1>EditProfile</h1>\n        <p>Username: {currentUser?.displayName}</p>\n        <p>Email: {currentUser?.email}</p>\n        <p>Avatar: \n          <img src={currentUser?.photoURL} alt={currentUser?.displayName} />\n        </p> */}\n      </div>\n    </>\n  );\n}\n"],"names":["CropperModal","_ref","src","modalOpen","setModalOpen","setPreview","setPhotoURL","_useState","useState","_useState2","_slicedToArray","slideValue","setSlideValue","cancelButtonRef","useRef","cropRef","handleSave","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dataUrl","result","blob","wrap","_context","prev","next","handleCancel","abrupt","current","getImage","toDataURL","fetch","sent","URL","createObjectURL","stop","apply","arguments","_jsx","Transition","Root","show","as","Fragment","children","_jsxs","Dialog","className","initialFocus","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","AvatarEditor","ref","image","style","width","height","border","borderRadius","color","scale","rotate","htmlFor","min","max","value","onChange","e","target","type","id","onClick","Cropper","preview","setSrc","_useState3","_useState4","inputRef","_Fragment","alt","click","accept","file","files","updateProfileData","_x","_x2","_updateProfileData","payload","dispatch","user","userDoc","res","auth","currentUser","updateProfile","doc","usersRef","uid","setDoc","merge","alert","upload","_x3","_x4","_upload","_callee2","fileRef","url","_context2","storage","uploadBytes","getDownloadURL","EditProfile","_useContext","useContext","AuthContext","photoURL","_useState5","displayName","_useState6","username","setUsername","handleSubmit","preventDefault","onSubmit","name","autoComplete"],"sourceRoot":""}