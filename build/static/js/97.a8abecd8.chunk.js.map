{"version":3,"file":"static/js/97.a8abecd8.chunk.js","mappings":"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","sources":["components/form/TextArea.jsx","../node_modules/@heroicons/react/24/outline/esm/PhoneIcon.js","../node_modules/@heroicons/react/24/outline/esm/EnvelopeIcon.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","pages/Contact.jsx"],"sourcesContent":["function TextArea({\n  value,\n  setValue,\n  rows,\n  name,\n  id,\n  required,\n  placeholder,\n  label,\n}) {\n  return (\n    <div className=\"space-y-3 w-full\">\n      {label && (\n        <label\n          htmlFor={id}\n          className=\"block text-sm font-medium leading-6 text-white\"\n        >\n          {label}\n        </label>\n      )}\n      <textarea\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        rows={rows}\n        name={name}\n        id={id}\n        required={required}\n        className=\"block w-full rounded-sm border-0 bg-white/5 px-3.5 py-2 text-white shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-sky-500 sm:text-sm sm:leading-6\"\n        placeholder={placeholder}\n      />\n    </div>\n  );\n}\n\nexport default TextArea;\n","import * as React from \"react\";\nfunction PhoneIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 002.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 01-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 00-1.091-.852H4.5A2.25 2.25 0 002.25 4.5v2.25z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(PhoneIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction EnvelopeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75\"\n  }));\n}\nconst ForwardRef = React.forwardRef(EnvelopeIcon);\nexport default ForwardRef;","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.11.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import Layout from \"../components/Layout\";\nimport { EnvelopeIcon, PhoneIcon } from \"@heroicons/react/24/outline\";\nimport Shadow from \"../components/atoms/Shadow\";\nimport { useState, useRef } from \"react\";\nimport Form from \"../components/form/Form\";\nimport Input from \"../components/form/Input\";\nimport TextArea from \"../components/form/TextArea\";\n\nimport emailjs from \"@emailjs/browser\";\nimport toast from \"react-hot-toast\";\n\n// const SERVICE_ID = \"service_hixy8q4\";\n// const TEMPLATE_ID = \"template_g5sk2pw\";\n// const PUBLIC_KEY = \"IbqKMmNAfrG8I0Qa-\";\n\nexport default function Contact() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const refForm = useRef();\n  const options = [\n    {\n      id: \"user_name\",\n      name: \"user_name\",\n      type: \"text\",\n      label: \"Name\",\n      value: name,\n      setValue: setName,\n      required: true,\n      placeholder: \"wizard\",\n    },\n\n    {\n      id: \"user_email\",\n      name: \"user_email\",\n      type: \"email\",\n      label: \"Email address\",\n      value: email,\n      setValue: setEmail,\n      required: true,\n      placeholder: \"example@gmail.com\",\n    },\n  ];\n\n  const submit = (e) => {\n    e.preventDefault();\n\n    emailjs.sendForm(process.env.SERVICE_ID, process.env.TEMPLATE_ID, refForm.current, process.env.PUBLIC_KEY).then(\n      (result) => {\n        toast.success(`Thanks ${name}! Your message has been sent`, {\n          duration: 3000,\n          position: \"top-center\",\n        });\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n\n  return (\n    <Layout>\n      <Shadow />\n\n      <div className=\" grid grid-cols-1 lg:grid-cols-2  px-9    lg:pt-[122px] gap-16\">\n        <div className=\"mx-auto lg:mx-0 lg:max-w-lg\">\n          <h2 className=\"text-3xl font-bold tracking-tight text-white pt-6\">\n            Get in touch\n          </h2>\n          <p className=\"mt-6 text-lg leading-8 text-zinc-300\">\n            Proin volutpat consequat porttitor cras nullam gravida at. Orci\n            molestie a eu arcu. Sed ut tincidunt integer elementum id sem. Arcu\n            sed malesuada et magna.\n          </p>\n          <dl className=\"mt-12 space-y-6 text-base leading-7 text-zinc-300\">\n            <div className=\"flex gap-x-6\">\n              <dt className=\"flex-none\">\n                <span className=\"sr-only\">Telephone</span>\n                <PhoneIcon\n                  className=\"h-7 w-6 text-zinc-400\"\n                  aria-hidden=\"true\"\n                />\n              </dt>\n              <dd>\n                <a className=\"hover:text-white\" href=\"tel:+380957632006\">\n                  +38 (096) 763-2006\n                </a>\n              </dd>\n            </div>\n            <div className=\"flex gap-x-6\">\n              <dt className=\"flex-none\">\n                <span className=\"sr-only\">Email</span>\n                <EnvelopeIcon\n                  className=\"h-7 w-6 text-zinc-400\"\n                  aria-hidden=\"true\"\n                />\n              </dt>\n              <dd>\n                <a\n                  className=\"hover:text-white\"\n                  href=\"mailto:akseninkoalina@gmail.com\"\n                >\n                  akseninkoalina@gmail.com\n                </a>\n              </dd>\n            </div>\n          </dl>\n        </div>\n        <Form\n          submit={submit}\n          buttonName={\"Send message\"}\n          buttonWidth=\"\"\n          ref={refForm}\n        >\n          {options.map((option) => (\n            <Input props={option} key={option.id} />\n          ))}\n\n          <TextArea\n            label=\"Message\"\n            value={message}\n            setValue={setMessage}\n            name=\"message\"\n            id=\"message\"\n            rows={4}\n            required={true}\n          />\n        </Form>\n      </div>\n    </Layout>\n  );\n}\n"],"names":["_ref","value","setValue","rows","name","id","required","placeholder","label","_jsxs","className","children","_jsx","htmlFor","onChange","e","target","React","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","_createClass","httpResponse","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","_ref2","open","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","Contact","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","message","setMessage","refForm","useRef","options","type","Layout","Shadow","PhoneIcon","href","EnvelopeIcon","Form","submit","preventDefault","emailjs","process","SERVICE_ID","TEMPLATE_ID","current","PUBLIC_KEY","then","result","toast","success","concat","duration","position","error","console","log","buttonName","buttonWidth","map","option","Input","TextArea"],"sourceRoot":""}