{"version":3,"file":"static/js/666.c12ed51b.chunk.js","mappings":"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","sources":["components/atoms/Time.jsx","components/post/EditPostButton.jsx","components/post/PostCardBody.jsx","helpers/fetchPost.js","helpers/handleProfile.js","components/post/DeletePostButton.jsx","components/post/MyPost.jsx","pages/UserProfile.jsx"],"sourcesContent":["export function Time ({time}) {\n    return (\n        <div className=\"flex gap-3 items-center text-sm text-zinc-400 \">\n        <time>\n          {time?.toDate().toLocaleDateString(\"en-US\", {\n            weekday: \"long\",\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n          })}\n        </time>\n      </div>\n    )\n}","import { NavLink } from \"react-router-dom\";\n\nfunction EditPostButton({ postId }) {\n  return (\n    <NavLink\n      to={`/editpost/${postId}`}\n      className=\"z-20 hover:text-sky-400 text-zinc-300 text-sm font-semibold  px-2 py-1 shadow-xl  bg-zinc-800 rounded-sm\"\n    >\n      Edit Post\n    </NavLink>\n  );\n}\n\nexport default EditPostButton;\n","import { NavLink } from \"react-router-dom\";\nimport { Time } from \"../atoms/Time\";\n\nfunction PostCardBody({ post, children }) {\n  return (\n    <>\n      <NavLink\n        to={`/post/${post?.id}`}\n        className=\"flex flex-col gap-3 hover:text-zinc-400\"\n      >\n        <h3 className=\"text-xl font-semibold leading-6 \">{post?.title}</h3>\n        <p className=\" line-clamp-3 leading-6 \">{post?.description}</p>\n      </NavLink>\n\n      <div className=\"flex justify-between items-center text-zinc-300 w-full\">\n        <Time time={post?.createdAt} />\n        <div className=\"flex items-center gap-3 pr-3 \">{children}</div>\n      </div>\n    </>\n  );\n}\n\nexport default PostCardBody;\n","import { doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\n\nexport default async function fetchPost(postId) {\n  const docRef = doc(db, \"posts\", postId);\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n    const post = docSnap.data();\n    return { ...post, id: docSnap.id };\n  } else {\n    return null;\n  }\n}\n","import { auth } from \"../firebase\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport { usersRef } from \"../firebase\";\nimport { updateProfile } from \"firebase/auth\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../firebase\";\n\nexport async function updateProfileData(payload, dispatch) {\n  const user = auth.currentUser;\n\n  await updateProfile(user, payload);\n  const userDoc = doc(usersRef, user.uid);\n\n  const res = setDoc(userDoc, payload, { merge: true });\n  res &&\n    dispatch({\n      type: \"UPDATE_PROFILE\",\n      payload,\n    });\n\n  return res;\n}\n\nexport async function upload(file, currentUser) {\n  const fileRef = ref(storage, \"avatar/\" + currentUser.uid + \".jpg\");\n  await uploadBytes(fileRef, file);\n  let url = await getDownloadURL(fileRef);\n\n  return url;\n}\n","import { deleteDoc, doc } from \"firebase/firestore\";\nimport { postsRef } from \"../../firebase\";\nimport { updateProfileData } from \"../../helpers/handleProfile\";\nimport { toast } from \"react-hot-toast\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../store/AuthContext\";\n\nfunction DeletePostButton({ postId }) {\n  const { currentUser, dispatch } = useContext(AuthContext);\n  \n  async function deletePost(e) {\n    e.preventDefault();\n    const response = await deleteDoc(doc(postsRef, postId));\n    const newPosts = currentUser.posts.filter((id) => id !== postId);\n    updateProfileData({ posts: [...newPosts] }, dispatch);\n    response && toast.success(\"Post deleted\");\n  }\n\n  return (\n    <button\n      onClick={deletePost}\n      className=\"z-20 hover:text-red-500 text-zinc-400 text-sm font-bold  \"\n    >\n      Delete\n    </button>\n  );\n}\n\nexport default DeletePostButton;\n","import { useState, useEffect, useContext } from \"react\";\nimport fetchPost from \"../../helpers/fetchPost\";\nimport { AuthContext } from \"../../store/AuthContext\";\nimport { useParams } from \"react-router-dom\";\nimport PostCardBody from \"./PostCardBody\";\n\nimport EditPostButton from \"./EditPostButton\";\nimport DeletePostButton from \"./DeletePostButton\";\n\nexport default function MyPost({ postId }) {\n  const [post, setPost] = useState(null);\n  const [isMy, setIsMy] = useState(false);\n  const { currentUser } = useContext(AuthContext);\n\n  let { profileId } = useParams();\n\n  useEffect(() => {\n    if (currentUser && profileId === currentUser.uid) {\n      setIsMy(true);\n    }\n\n    fetchPost(postId).then((post) => {\n      setPost(post);\n    });\n  }, [currentUser, postId, profileId]);\n\n  return (\n    post && (\n      <div className=\"space-y-3 border-b border-zinc-700 px-9 py-6 shadow-sm \">\n        <PostCardBody post={post}>\n          {isMy && (\n            <>\n              <EditPostButton postId={postId} />{\" \"}\n              <DeletePostButton postId={postId} />\n            </>\n          )}\n        </PostCardBody>\n      </div>\n    )\n  );\n}\n","import Layout from \"../components/Layout\";\nimport { useEffect, useState } from \"react\";\n\nimport MyPost from \"../components/post/MyPost\";\nimport { fetchUser } from \"../helpers/fetchUser\";\nimport { useParams } from \"react-router-dom\";\nimport Loading from \"../components/atoms/Loading\";\n\nexport default function UserProfile() {\n  const [user, setUser] = useState(null);\n\n  const [isLoading, setIsLoading] = useState(true);\n  let { profileId } = useParams();\n\n  useEffect(() => {\n \n    const fetchData = async () => {\n      const currentUser = await fetchUser(profileId);\n      setUser(currentUser);\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [profileId]);\n\n  return isLoading ? (\n    <Loading />\n  ) : (\n    <Layout>\n      <main className=\"mt-20\">\n        <div className=\" flex items-center space-x-3  border-b border-zinc-700 px-6 py-9 shadow-sm focus-within:ring-2 \">\n          <div className=\"flex-shrink-0\">\n            <img\n              className=\"h-24 w-24 rounded-full object-cover\"\n              src={\n                user?.photoURL ||\n                \"https://media.tenor.com/O7iUTKsWo4gAAAAC/space-cat.gif\"\n              }\n              alt=\"\"\n            />\n          </div>\n          <div>\n            <p className=\"text-2xl font-bold \">{user?.displayName}</p>\n            <p className=\"truncate text-sm text-zinc-400\"> {user?.email}</p>\n            <p className=\"truncate text- font-semibold \">\n           \n              Published posts:\n              <span className=\"ml-2\"> {user?.posts.length}</span>{\" \"}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"mt-9\">\n          <h1 className=\"text-xl font-bold text-center\">\n            Posts by\n            <span className=\"text-xl font-medium text-sky-600 ml-2\">\n              {user?.displayName}\n            </span>\n          </h1>\n\n          {user?.posts.length > 0 ? (\n            <ul className=\"mt-5\">\n              {user?.posts.map((postId) => (\n                <li  key={postId} >\n                  <MyPost postId={postId}/>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"mt-6 text-center text-xl \">\n              There are no posts yet{\" \"}\n            </div>\n          )}\n        </div>\n      </main>\n    </Layout>\n  );\n}\n"],"names":["Time","_ref","time","_jsx","className","children","toDate","toLocaleDateString","weekday","year","month","day","postId","NavLink","to","concat","post","_jsxs","_Fragment","id","title","description","createdAt","fetchPost","_x","_fetchPost","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","docRef","docSnap","wrap","_context","prev","next","doc","db","getDoc","sent","exists","data","abrupt","_objectSpread","stop","updateProfileData","_x2","_updateProfileData","payload","dispatch","user","userDoc","res","auth","currentUser","updateProfile","usersRef","uid","setDoc","merge","type","upload","_x3","_x4","_upload","_callee2","file","fileRef","url","_context2","ref","storage","uploadBytes","getDownloadURL","_useContext","useContext","AuthContext","_deletePost","e","response","newPosts","preventDefault","deleteDoc","postsRef","posts","filter","_toConsumableArray","toast","success","onClick","MyPost","_useState","useState","_useState2","_slicedToArray","setPost","_useState3","_useState4","isMy","setIsMy","profileId","useParams","useEffect","then","PostCardBody","EditPostButton","DeletePostButton","UserProfile","setUser","isLoading","setIsLoading","fetchData","fetchUser","Loading","Layout","src","photoURL","alt","displayName","email","length","map"],"sourceRoot":""}