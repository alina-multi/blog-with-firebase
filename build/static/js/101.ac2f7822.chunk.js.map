{"version":3,"file":"static/js/101.ac2f7822.chunk.js","mappings":"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","sources":["helpers/handleProfile.js","components/user/AvatarCropperModal.jsx","components/user/AvatarCropper.jsx","pages/private/EditProfile.jsx"],"sourcesContent":["import { auth } from \"../firebase\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport { usersRef } from \"../firebase\";\nimport { updateProfile } from \"firebase/auth\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../firebase\";\n\nexport async function updateProfileData(payload, dispatch) {\n  const user = auth.currentUser;\n\n  await updateProfile(user, payload);\n  const userDoc = doc(usersRef, user.uid);\n\n  const res = setDoc(userDoc, payload, { merge: true });\n  res &&\n    dispatch({\n      type: \"UPDATE_PROFILE\",\n      payload,\n    });\n\n  return res;\n}\n\nexport async function upload(file, currentUser) {\n  const fileRef = ref(storage, \"avatar/\" + currentUser.uid + \".jpg\");\n  await uploadBytes(fileRef, file);\n  let url = await getDownloadURL(fileRef);\n\n  return url;\n}\n","import { Fragment, useRef, useState } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport AvatarEditor from \"react-avatar-editor\";\n\nexport default function CropperModal({\n  src,\n  modalOpen,\n  setModalOpen,\n  setPreview,\n  setPhotoURL,\n}) {\n  const [slideValue, setSlideValue] = useState(10);\n  const cancelButtonRef = useRef(null);\n  const cropRef = useRef(null);\n\n  const handleSave = async () => {\n    if (!cropRef) {\n      handleCancel();\n      return;\n    }\n\n    const dataUrl = cropRef.current.getImage().toDataURL();\n    const result = await fetch(dataUrl);\n    const blob = await result.blob();\n    setPreview(URL.createObjectURL(blob));\n    setPhotoURL(blob);\n    setModalOpen(false);\n    setSlideValue(10);\n  };\n\n  const handleCancel = () => {\n    setModalOpen(false);\n    setSlideValue(10);\n  };\n\n  return (\n    <Transition.Root show={modalOpen} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"relative z-50\"\n        initialFocus={cancelButtonRef}\n        onClose={setModalOpen}\n      >\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-zinc-500 bg-opacity-75 transition-opacity\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n          <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n              enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n              leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            >\n              <Dialog.Panel className=\"relative transform overflow-hidden rounded-lg bg-zinc-900 px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6\">\n                <div>\n                  <div className=\"mt-3 text-center sm:mt-5\">\n                    <AvatarEditor\n                      ref={cropRef}\n                      image={src}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                      border={50}\n                      borderRadius={150}\n                      color={[0, 0, 0, 0.72]}\n                      scale={slideValue / 10}\n                      rotate={0}\n                    />\n\n                    <div>\n                      <label\n                        htmlFor=\"zoom\"\n                        className=\"mb-2 inline-block text-neutral-700 dark:text-neutral-200\"\n                      >\n                        zoom\n                      </label>\n                      <input\n                        min={10}\n                        max={50}\n                        value={slideValue}\n                        onChange={(e) => setSlideValue(e.target.value)}\n                        type=\"range\"\n                        className=\"transparent accent-sky-500 h-1.5 w-full cursor-pointer appearance-none rounded-lg border-transparent bg-neutral-200\"\n                        id=\"zoom\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-5 sm:mt-6 sm:grid sm:grid-flow-row-dense sm:grid-cols-2 sm:gap-3\">\n                  <button\n                    type=\"button\"\n                    className=\"inline-flex w-full justify-center rounded-sm bg-sky-600 px-3 py-2 text-sm font-semibold text-zinc-100 shadow-sm hover:bg-sky-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-sky-600 sm:col-start-2\"\n                    onClick={() => handleSave()}\n                  >\n                    Save\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"mt-3 inline-flex w-full justify-center rounded-sm bg-zinc-500 text-white px-3 py-2 text-sm font-semibold hadow-sm ring-1 ring-inset ring-zinc-800 hover:bg-zinc-50 sm:col-start-1 sm:mt-0\"\n                    onClick={handleCancel}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n}\n","import { useState, useRef } from \"react\";\nimport CropperModal from \"./AvatarCropperModal\";\n\nexport default function Cropper({ preview, setPreview, setPhotoURL }) {\n  const [src, setSrc] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const inputRef = useRef();\n\n  const handleImgChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    setSrc(URL.createObjectURL(file));\n    setModalOpen(true);\n  };\n\n  const handleInputClick = (e) => {\n    inputRef.current.click();\n  };\n\n  return (\n    <>\n      <CropperModal\n        modalOpen={modalOpen}\n        setModalOpen={setModalOpen}\n        src={src}\n        setPreview={setPreview}\n        setPhotoURL={setPhotoURL}\n      />\n      <div className=\"flex gap-3 items-center pt-6\">\n        <div className=\"border  rounded-full \">\n          <img\n            src={\n              preview ||\n              \" https://www.signivis.com/img/custom/avatars/member-avatar-01.png\"\n            }\n            alt=\"\"\n            className=\"w-28 rounded-full object-cover\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          onClick={handleInputClick}\n          className=\"rounded-sm bg-sky-500 text-zinc-100 px-4 py-2\"\n        >\n          Select Image\n        </button>\n\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          ref={inputRef}\n          onChange={handleImgChange}\n          className=\"hidden\"\n        />\n      </div>\n    </>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport Cropper from \"../../components/user/AvatarCropper\";\nimport { updateProfileData, upload } from \"../../helpers/handleProfile\";\nimport { AuthContext } from \"../../store/AuthContext\";\nimport Layout from \"../../components/Layout\";\nimport Input from \"../../components/form/Input\";\nimport Shadow from \"../../components/atoms/Shadow\";\nimport { toast } from \"react-hot-toast\";\n\nexport default function EditProfile() {\n  const { currentUser, dispatch } = useContext(AuthContext);\n  const [preview, setPreview] = useState(currentUser.photoURL);\n  const [photoURL, setPhotoURL] = useState(null);\n  const [username, setUsername] = useState(currentUser.displayName);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let url = currentUser.photoURL;\n    if (photoURL) {\n      url = await upload(photoURL, currentUser);\n    }\n\n   const res =  updateProfileData({ displayName: username, photoURL: url }, dispatch);\n   res && toast.success(\"Profile Updated\");\n\n  };\n\n  return (\n    <Layout>\n      <Shadow />\n      <form className=\"w-3/4 mx-auto mt-20 pt-12\" onSubmit={handleSubmit}>\n        <div className=\"space-y-3\">\n          <h2 className=\"text-center text-2xl font-bold leading-9 tracking-tight text-zinc-100\">\n            Personal Information\n          </h2>\n          <p className=\"mt-1 text-center text-sm leading-6 text-zinc-400\">\n            This information will be displayed publicly so be careful what you\n            share.\n          </p>\n          <div className=\"flex justify-center\">\n            <Cropper\n              preview={preview}\n              setPreview={setPreview}\n              setPhotoURL={setPhotoURL}\n            />\n          </div>\n\n          <Input\n            props={{\n              label: \"Username\",\n              setValue: setUsername,\n              value: username,\n              type: \"text\",\n              name: \"username\",\n              id: \"username\",\n            }}\n          />\n        </div>\n\n        <div className=\"mt-6 flex items-center justify-end gap-x-6\">\n          <button\n            type=\"button\"\n            className=\"text-sm font-semibold leading-6 text-zinc-100\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            className=\"rounded-sm bg-sky-500 px-3 py-2 text-sm font-semibold text-zinc-100 shadow-sm hover:bg-sky-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-sky-500\"\n          >\n            Save\n          </button>\n        </div>\n      </form>\n    </Layout>\n  );\n}\n"],"names":["updateProfileData","_x","_x2","_updateProfileData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","payload","dispatch","user","userDoc","res","wrap","_context","prev","next","auth","currentUser","updateProfile","doc","usersRef","uid","setDoc","merge","type","abrupt","stop","upload","_x3","_x4","_upload","_callee2","file","fileRef","url","_context2","ref","storage","uploadBytes","getDownloadURL","sent","CropperModal","_ref","src","modalOpen","setModalOpen","setPreview","setPhotoURL","_useState","useState","_useState2","_slicedToArray","slideValue","setSlideValue","cancelButtonRef","useRef","cropRef","handleSave","_ref2","dataUrl","result","blob","handleCancel","current","getImage","toDataURL","fetch","URL","createObjectURL","_jsx","Transition","Root","show","as","Fragment","children","_jsxs","Dialog","className","initialFocus","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","AvatarEditor","image","style","width","height","border","borderRadius","color","scale","rotate","htmlFor","min","max","value","onChange","e","target","id","onClick","Cropper","preview","setSrc","_useState3","_useState4","inputRef","_Fragment","alt","click","accept","files","EditProfile","_useContext","useContext","AuthContext","photoURL","_useState5","displayName","_useState6","username","setUsername","handleSubmit","preventDefault","toast","success","Layout","Shadow","onSubmit","Input","props","label","setValue","name"],"sourceRoot":""}